# https://tox.wiki/en/latest/example/package.html
[tox]
envlist = py37, linters, mypy, security
skip_missing_interpreters = true
isolated_build = True

[testenv]
description = Pytest with coverage
extras = testing
commands = python -m pytest

## Linter
[testenv:flake8]
skip_install = true
deps =
    flake8
commands =
    flake8

[testenv:isort]
skip_install = true
deps =
    isort
commands =
    isort --diff --check-only .

[testenv:black]
skip_install = true
deps =
    black
commands =
    black --diff --check --config pyproject.toml .

## Typing
[testenv:mypy]
extras = typing
commands =
    mypy --config-file setup.cfg

[testenv:linters]
skip_install = true
deps =
    {[testenv:flake8]deps}
    {[testenv:isort]deps}
    {[testenv:black]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:isort]commands}
    {[testenv:black]commands}

## Security
[testenv:bandit]
skip_install = true
deps =
    bandit
commands =
    bandit -ll --recursive todo_sample tests

[testenv:safety]
deps =
    safety
commands =
    safety check --full-report

[testenv:security]
skip_install = true
deps =
    {[testenv:bandit]deps}
    {[testenv:safety]deps}
commands =
    {[testenv:bandit]commands}
    {[testenv:safety]commands}


[testenv:pre-commit]
skip_install = true
deps = pre-commit
commands =
    pre-commit run --all-files --show-diff-on-failure

## Packaging
[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    build: python -m build .

[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
    TWINE_REPOSITORY_URL
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository testpypi} dist/*
